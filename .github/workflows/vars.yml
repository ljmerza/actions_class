name: 'custom ENV'

on:  workflow_dispatch

env:
  DAY: 'Monday'
  testvar: 'test'

jobs:
  localized_testvar_print:
    name: prints vars
    runs-on: ubuntu-latest 
    env:
      local: 'local'
      testvar: 'test2'
    steps:
      - name: prints all vars
        env:
          testvar: 'test3'
        run: |
          echo "all vars"
          env
          echo "local var ${{ ENV.local }}"
          echo "testvar var ${{ ENV.testvar }}"
          echo "day var ${{ ENV.DAY }}"

      - name: prints all vars p2
        run: |
          echo "testvar var ${{ ENV.testvar }}"
  
  print_global_testvar:
    name: prints testvar
    runs-on: ubuntu-latest 
    steps:
      - name: prints testvar
        run:  echo "testvar var ${{ vars.testvar }}"
  
  save_vars_inplace:
    name: save a var in the workflow
    # map vars to a job output to share between jobs
    outputs:
      action_state: ${{ steps.save_action_state.outputs.action_state }}
    runs-on: ubuntu-latest 
    steps:
      - name: save_action_state
        run: |
          echo "action_state=yellow" >> $GITHUB_ENV
          echo "::set-output name=action_state2::Techskool"
          echo "::set-output name=action_state3::$(date + '%Y-%m-%d-%h-%M')"
      - name: prints action_state
        run:  |
          echo "action_state var ${{ vars.action_state }}"
          echo "action_state2 var ${{ vars.action_state2 }}"
          echo "action_state3 var ${{ vars.action_state3 }}"
  print_previous_job_var:
    name: prints previous job var
    runs-on: ubuntu-latest 
    needs: save_vars_inplace
    steps:
      - name: prints previous job var
        run:  echo "action_state var ${{ needs.save_vars_inplace.outputs.action_state }}"
        
  ubuntu-var-print:
    name: prints ubuntu var
    runs-on: ubuntu-latest 
    steps:
      - name: prints ubuntu var
        run:  env
  windows-var-print:
    name: prints windows var
    runs-on: windows-latest 
    steps:
      - name: prints windows var
        run:  env
  macos-var-print:
    name: prints macos var
    runs-on: macos-latest 
    steps:
      - name: prints macos var
        run:  env

  set_secure_vars:
    name: print MY_SEC var
    runs-on: ubuntu-latest
    steps:
      - name: print MY_SEC var
        run: |
          echo "MY_SEC var ${{ secrets.MY_SEC }}"

      - name: print MY_VAR env var
        run: |
          echo "MY_VAR env var ${{ vars.MY_VAR }}"

      - name: print secret as env var
        env:
          MY_VAR2: ${{ secrets.MY_SEC }}
        run: |
          echo "MY_SEC env var ${{ env.MY_VAR2 }}"
  
  env_change_dev:
    runs-on: ubuntu-latest
    environment:
      name: development
      url: https://github.com
    steps:
      - name: run env vars that are attached to development env
        run: |
          echo "env var ${{ vars.ENV_BASED_VAR }}"
  env_change_prod:
    runs-on: ubuntu-latest
    environment: 
      name: production
      url: https://github.com
    steps:
      - name: run env vars that are attached to production env
        run: |
          echo "env var ${{ vars.ENV_BASED_VAR }}"
